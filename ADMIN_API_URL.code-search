# Query: ADMIN_API_URL
# Flags: RegExp
# ContextLines: 1

17 results - 6 files

.env:
  17  NEXT_PUBLIC_ADMIN_BASE_URL="http://localhost:3000"
  18: NEXT_PUBLIC_NEXT_PUBLIC_ADMIN_API_URL="http://localhost:3000/api"
  19  NEXT_PUBLIC_CORS_ORIGIN="http://localhost:3001"

components/Bookings.jsx:
   87    useEffect(() => {
   88:     console.log(process.env.NEXT_PUBLIC_ADMIN_API_URL);
   89      // Fetch user bookings
   90      axios
   91:       .get(`${process.env.NEXT_PUBLIC_ADMIN_API_URL}/userbookings`)
   92        // .get(`http://localhost:3000/api/userbookings`)

   98          axios
   99:           .get(`${process.env.NEXT_PUBLIC_ADMIN_API_URL}/boarding`)
  100            .then((res) => {

  165        const completeResponse = await axios.delete(
  166:         `${process.env.NEXT_PUBLIC_ADMIN_API_URL}/userbookings?id=${selectedBookingId}`
  167        );

  174          const updatedBookings = await axios.get(
  175:           `${process.env.NEXT_PUBLIC_ADMIN_API_URL}/userbookings`
  176          );

components/DateTimeSettings.jsx:
   20        const response = await fetch(
   21:         `${process.env.NEXT_PUBLIC_ADMIN_API_URL}/settings`
   22        );

   50        const response = await axios.put(
   51:         `${process.env.NEXT_PUBLIC_ADMIN_API_URL}/settings`,
   52          {

   78        const response = await axios.delete(
   79:         `${process.env.NEXT_PUBLIC_ADMIN_API_URL}/settings`,
   80          {

   98      try {
   99:       const response = await axios.post(`${process.env.NEXT_PUBLIC_ADMIN_API_URL}/hours`, {
  100          OpeningTime: timeIntervalStart,

  115        try {
  116:         const response = await axios(`${process.env.NEXT_PUBLIC_ADMIN_API_URL}/hours`);
  117        } catch (err) {

pages/boarding.js:
  50    useEffect(() => {
  51:     axios.get(`${process.env.NEXT_PUBLIC_ADMIN_API_URL}/boarding`).then((res) => {
  52        // console.log(res.data);

pages/enquiries.js:
  11    useEffect(() => {
  12:     axios.get(`${process.env.NEXT_PUBLIC_ADMIN_API_URL}/enquiry`).then((res) => {
  13        setEnquiryList(res.data);

  35        const completeResponse = await axios.delete(
  36:         `${process.env.NEXT_PUBLIC_ADMIN_API_URL}/enquiry?id=${selectedEnquiryId}`
  37        );

pages/boarding/view/[...id].js:
  20      axios
  21:       .get(`${process.env.NEXT_PUBLIC_ADMIN_API_URL}/boarding?id=${id}`)
  22        .then((res) => {

  41        const res = await axios.patch(
  42:         `${process.env.NEXT_PUBLIC_ADMIN_API_URL}/boarding?id=${id}`,
  43          {

  89        const completeResponse = await axios.delete(
  90:         `${process.env.NEXT_PUBLIC_ADMIN_API_URL}/boarding?id=${selectedBoardingId}`
  91        );
